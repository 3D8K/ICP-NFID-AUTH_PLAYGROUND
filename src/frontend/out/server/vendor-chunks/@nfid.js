"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@nfid";
exports.ids = ["vendor-chunks/@nfid"];
exports.modules = {

/***/ "(ssr)/../../node_modules/@nfid/embed/src/index.js":
/*!***************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/index.js ***!
  \***************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/iframe/manager */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/manager.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/nfid */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/nfid.js\"), exports);\ntslib_1.__exportStar(__webpack_require__(/*! ./lib/authentication */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/index.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBTztBQUMvQixxQkFBcUIsbUJBQU8sQ0FBQyw0RkFBc0I7QUFDbkQscUJBQXFCLG1CQUFPLENBQUMsd0VBQVk7QUFDekMscUJBQXFCLG1CQUFPLENBQUMsa0dBQXNCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9pbmRleC5qcz80MTIzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2xpYi9pZnJhbWUvbWFuYWdlclwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvbmZpZFwiKSwgZXhwb3J0cyk7XG50c2xpYl8xLl9fZXhwb3J0U3RhcihyZXF1aXJlKFwiLi9saWIvYXV0aGVudGljYXRpb25cIiksIGV4cG9ydHMpO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/auth-client.js":
/*!****************************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/authentication/auth-client.js ***!
  \****************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NfidAuthClient = exports.ERROR_USER_INTERRUPT = exports.DelegationType = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst agent_1 = __webpack_require__(/*! @dfinity/agent */ \"(ssr)/../../node_modules/@dfinity/agent/lib/esm/index.js\");\nconst auth_client_1 = __webpack_require__(/*! @dfinity/auth-client */ \"(ssr)/../../node_modules/@dfinity/auth-client/lib/esm/index.js\");\nconst identity_1 = __webpack_require__(/*! @dfinity/identity */ \"(ssr)/../../node_modules/@dfinity/identity/lib/esm/index.js\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/storage.js\");\nconst get_iframe_1 = __webpack_require__(/*! ../iframe/get-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js\");\nconst postmsg_rpc_1 = __webpack_require__(/*! ../postmsg-rpc */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/postmsg-rpc.js\");\nconst principal_1 = __webpack_require__(/*! @dfinity/principal */ \"(ssr)/../../node_modules/@dfinity/principal/lib/esm/index.js\");\nvar DelegationType;\n(function (DelegationType) {\n    DelegationType[DelegationType[\"GLOBAL\"] = 0] = \"GLOBAL\";\n    DelegationType[DelegationType[\"ANONYMOUS\"] = 1] = \"ANONYMOUS\";\n})(DelegationType || (exports.DelegationType = DelegationType = {}));\nconst ECDSA_KEY_LABEL = 'ECDSA';\nconst ED25519_KEY_LABEL = 'Ed25519';\nexports.ERROR_USER_INTERRUPT = 'UserInterrupt';\nclass NfidAuthClient {\n    /**\n     * Creates a new instance of the NfidAuthClient class.\n     * @param options An object containing optional parameters for the authentication client.\n     * @param options.identity An optional identity to use for authentication.\n     * @param options.storage An optional storage mechanism to use for storing authentication data.\n     * @param options.keyType An optional key type to use for authentication.\n     * @param options.idleOptions An optional object containing options for idle management.\n     * @returns A Promise that resolves to a new instance of the NfidAuthClient class.\n     */\n    static create(options = {}) {\n        var _a, _b, _c;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NfidAuthClient.create', { keyType: options.keyType });\n            const storage = (_a = options.storage) !== null && _a !== void 0 ? _a : new storage_1.IdbStorage();\n            const keyType = (_b = options.keyType) !== null && _b !== void 0 ? _b : ECDSA_KEY_LABEL;\n            let key = null;\n            if (options.identity) {\n                key = options.identity;\n            }\n            else {\n                let maybeIdentityStorage = yield storage.get(storage_1.KEY_STORAGE_KEY);\n                if (!maybeIdentityStorage && storage_1.isBrowser) {\n                    // Attempt to migrate from localstorage\n                    try {\n                        const fallbackLocalStorage = new storage_1.LocalStorage();\n                        const localChain = yield fallbackLocalStorage.get(storage_1.KEY_STORAGE_DELEGATION);\n                        const localKey = yield fallbackLocalStorage.get(storage_1.KEY_STORAGE_KEY);\n                        // not relevant for Ed25519\n                        if (localChain && localKey && keyType === ECDSA_KEY_LABEL) {\n                            console.log('Discovered an identity stored in localstorage. Migrating to IndexedDB');\n                            yield storage.set(storage_1.KEY_STORAGE_DELEGATION, localChain);\n                            yield storage.set(storage_1.KEY_STORAGE_KEY, localKey);\n                            maybeIdentityStorage = localChain;\n                            // clean up\n                            yield fallbackLocalStorage.remove(storage_1.KEY_STORAGE_DELEGATION);\n                            yield fallbackLocalStorage.remove(storage_1.KEY_STORAGE_KEY);\n                        }\n                    }\n                    catch (error) {\n                        console.error('error while attempting to recover localstorage: ' + error);\n                    }\n                }\n                if (maybeIdentityStorage) {\n                    try {\n                        if (typeof maybeIdentityStorage === 'object') {\n                            if (keyType === ED25519_KEY_LABEL &&\n                                typeof maybeIdentityStorage === 'string') {\n                                key = yield identity_1.Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n                            }\n                            else {\n                                key = yield identity_1.ECDSAKeyIdentity.fromKeyPair(maybeIdentityStorage);\n                            }\n                        }\n                        else if (typeof maybeIdentityStorage === 'string') {\n                            // This is a legacy identity, which is a serialized Ed25519KeyIdentity.\n                            key = identity_1.Ed25519KeyIdentity.fromJSON(maybeIdentityStorage);\n                        }\n                    }\n                    catch (e) {\n                        // Ignore this, this means that the localStorage value isn't a valid Ed25519KeyIdentity or ECDSAKeyIdentity\n                        // serialization.\n                    }\n                }\n            }\n            let identity = new agent_1.AnonymousIdentity();\n            let chain = null;\n            if (key) {\n                try {\n                    const chainStorage = yield storage.get(storage_1.KEY_STORAGE_DELEGATION);\n                    if (typeof chainStorage === 'object' && chainStorage !== null) {\n                        throw new Error('Delegation chain is incorrectly stored. A delegation chain should be stored as a string.');\n                    }\n                    if (options.identity) {\n                        identity = options.identity;\n                    }\n                    else if (chainStorage) {\n                        chain = identity_1.DelegationChain.fromJSON(chainStorage);\n                        // Verify that the delegation isn't expired.\n                        if (!(0, identity_1.isDelegationValid)(chain)) {\n                            yield _deleteStorage(storage);\n                            key = null;\n                        }\n                        else {\n                            identity = identity_1.DelegationIdentity.fromDelegation(key, chain);\n                        }\n                    }\n                }\n                catch (e) {\n                    console.error(e);\n                    // If there was a problem loading the chain, delete the key.\n                    yield _deleteStorage(storage);\n                    key = null;\n                }\n            }\n            let idleManager = undefined;\n            if ((_c = options.idleOptions) === null || _c === void 0 ? void 0 : _c.disableIdle) {\n                idleManager = undefined;\n            }\n            // if there is a delegation chain or provided identity, setup idleManager\n            else if (chain || options.identity) {\n                idleManager = auth_client_1.IdleManager.create(options.idleOptions);\n            }\n            if (!key) {\n                key = yield getKey(storage, keyType, options.storage);\n            }\n            return new this(identity, key, chain, storage, idleManager, options);\n        });\n    }\n    /**\n     * Creates an instance of AuthClient.\n     * @param _identity - The Identity object.\n     * @param _key - The SignIdentity object or null.\n     * @param _chain - The DelegationChain object or null.\n     * @param _storage - The AuthClientStorage object.\n     * @param idleManager - The IdleManager object or undefined.\n     * @param _createOptions - The AuthClientCreateOptions object or undefined.\n     */\n    constructor(_identity, _key, _chain, _storage, idleManager, _createOptions) {\n        var _a;\n        this._identity = _identity;\n        this._key = _key;\n        this._chain = _chain;\n        this._storage = _storage;\n        this.idleManager = idleManager;\n        this._createOptions = _createOptions;\n        const logout = this.logout.bind(this);\n        const idleOptions = _createOptions === null || _createOptions === void 0 ? void 0 : _createOptions.idleOptions;\n        /**\n         * Default behavior is to clear stored identity and reload the page.\n         * By either setting the disableDefaultIdleCallback flag or passing in a custom idle callback, we will ignore this config\n         */\n        if (!(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.onIdle) && !(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.disableDefaultIdleCallback)) {\n            (_a = this.idleManager) === null || _a === void 0 ? void 0 : _a.registerCallback(() => {\n                logout();\n                location.reload();\n            });\n        }\n    }\n    /**\n     * Retrieves the authentication key for the client from .\n     * @returns A promise that resolves with an ECDSAKeyIdentity or Ed25519KeyIdentity object.\n     */\n    getKey() {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return getKey(this._storage, (_a = this._createOptions) === null || _a === void 0 ? void 0 : _a.keyType, (_b = this._createOptions) === null || _b === void 0 ? void 0 : _b.storage);\n        });\n    }\n    /**\n     * Returns the delegation type based on the current chain's delegations.\n     * If the chain has at least one target, it is considered a global delegation.\n     * Otherwise, it is considered an anonymous delegation.\n     * @returns {DelegationType} The delegation type.\n     */\n    getDelegationType() {\n        var _a, _b;\n        return ((_b = (_a = this._chain) === null || _a === void 0 ? void 0 : _a.delegations[0].delegation.targets) === null || _b === void 0 ? void 0 : _b.length)\n            ? DelegationType.GLOBAL\n            : DelegationType.ANONYMOUS;\n    }\n    /**\n     * Renews the delegation for the specified targets.\n     * @param options - An optional object containing the following properties:\n     * @param optionsmaxTimeToLive: The maximum time to live for the delegation, in nanoseconds. Defaults to 8 hours.\n     * @param optionstargets: An array of strings representing the targets for which to renew the delegation.\n     * @param optionsderivationOrigin: The derivation origin to use for the delegation.\n     * @returns A Promise that resolves with the result of the renewed delegation.\n     */\n    renewDelegation(options) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NfidAuthClient.renewDelegation');\n            // Set default maxTimeToLive to 8 hours\n            const defaultTimeToLive = BigInt(8) /* hours */ * BigInt(3600000000000); /* nanoseconds */\n            const iframe = (0, get_iframe_1.getIframe)();\n            const response = yield (0, postmsg_rpc_1.request)(iframe, {\n                method: 'ic_renewDelegation',\n                params: [\n                    {\n                        sessionPublicKey: new Uint8Array((_a = this._key) === null || _a === void 0 ? void 0 : _a.getPublicKey().toDer()),\n                        maxTimeToLive: (_b = options === null || options === void 0 ? void 0 : options.maxTimeToLive) !== null && _b !== void 0 ? _b : defaultTimeToLive,\n                        targets: options === null || options === void 0 ? void 0 : options.targets,\n                        derivationOrigin: options === null || options === void 0 ? void 0 : options.derivationOrigin,\n                    },\n                ],\n            });\n            if ('error' in response)\n                throw new Error(response.error.message);\n            return this._handleSuccess(response.result);\n        });\n    }\n    /**\n     * Logs in the user and returns an `Identity` object.\n     * @param options An optional object containing login options.\n     * @param options.maxTimeToLive The maximum time to live for the delegated identity.\n     * @param options.targets An array of targets for the delegated identity.\n     * @param options.derivationOrigin The origin for the identity provider to use while generating the delegated identity.\n     * @see https://github.com/dfinity/internet-identity/blob/main/docs/internet-identity-spec.adoc\n     * @returns A Promise that resolves to an `Identity` object.\n     */\n    login(options) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            if (!this._key) {\n                this._key = yield this.getKey();\n            }\n            // Set default maxTimeToLive to 8 hours\n            const defaultTimeToLive = BigInt(8) /* hours */ * BigInt(3600000000000); /* nanoseconds */\n            const targets = options === null || options === void 0 ? void 0 : options.targets;\n            const derivationOrigin = options === null || options === void 0 ? void 0 : options.derivationOrigin;\n            const iframe = (0, get_iframe_1.getIframe)();\n            const response = yield (0, postmsg_rpc_1.request)(iframe, {\n                method: 'ic_getDelegation',\n                params: [\n                    Object.assign(Object.assign({ sessionPublicKey: new Uint8Array(this._key.getPublicKey().toDer()), maxTimeToLive: (_a = options === null || options === void 0 ? void 0 : options.maxTimeToLive) !== null && _a !== void 0 ? _a : defaultTimeToLive }, (targets ? { targets } : {})), (derivationOrigin ? { derivationOrigin } : {})),\n                ],\n            });\n            if ('error' in response) {\n                throw new Error(response.error.message);\n            }\n            return this._handleSuccess(response.result);\n        });\n    }\n    logout(options = {}) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            yield _deleteStorage(this._storage);\n            // Reset this auth client to a non-authenticated state.\n            this._identity = new agent_1.AnonymousIdentity();\n            this._key = null;\n            this._chain = null;\n            if (options.returnTo) {\n                try {\n                    window.history.pushState({}, '', options.returnTo);\n                }\n                catch (e) {\n                    window.location.href = options.returnTo;\n                }\n            }\n        });\n    }\n    getIdentity() {\n        return this._identity;\n    }\n    get isAuthenticated() {\n        return (!this.getIdentity().getPrincipal().isAnonymous() && this._chain !== null);\n    }\n    _handleSuccess(result) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const delegations = result.delegations.map((signedDelegation) => {\n                var _a;\n                return {\n                    delegation: new identity_1.Delegation(signedDelegation.delegation.pubkey, signedDelegation.delegation.expiration, (_a = signedDelegation.delegation.targets) === null || _a === void 0 ? void 0 : _a.map((principalId) => principal_1.Principal.fromText(principalId))),\n                    signature: signedDelegation.signature.buffer,\n                };\n            });\n            console.debug('NfidAuthClient._handleSuccess', {\n                delegations,\n            });\n            const delegationChain = identity_1.DelegationChain.fromDelegations(delegations, result.userPublicKey.buffer);\n            const key = this._key;\n            if (!key) {\n                throw new Error('missing key');\n            }\n            this._chain = delegationChain;\n            const delegationIdentity = identity_1.DelegationIdentity.fromDelegation(key, this._chain);\n            this._identity = delegationIdentity;\n            if (!this.idleManager) {\n                const idleOptions = (_a = this._createOptions) === null || _a === void 0 ? void 0 : _a.idleOptions;\n                this.idleManager = auth_client_1.IdleManager.create(idleOptions);\n                if (!(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.onIdle) && !(idleOptions === null || idleOptions === void 0 ? void 0 : idleOptions.disableDefaultIdleCallback)) {\n                    (_b = this.idleManager) === null || _b === void 0 ? void 0 : _b.registerCallback(() => {\n                        this.logout();\n                        location.reload();\n                    });\n                }\n            }\n            if (this._chain) {\n                yield this._storage.set(storage_1.KEY_STORAGE_DELEGATION, JSON.stringify(this._chain.toJSON()));\n            }\n            return delegationIdentity;\n        });\n    }\n}\nexports.NfidAuthClient = NfidAuthClient;\nfunction _deleteStorage(storage) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        yield storage.remove(storage_1.KEY_STORAGE_KEY);\n        yield storage.remove(storage_1.KEY_STORAGE_DELEGATION);\n        yield storage.remove(storage_1.KEY_VECTOR);\n    });\n}\nfunction getKey(storage, keyType, optionsStorage) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        console.debug('getKey', { keyType });\n        let key;\n        // Create a new key (whether or not one was in storage).\n        if (keyType === ED25519_KEY_LABEL) {\n            //eslint-disable-next-line @typescript-eslint/ban-ts-comment\n            //@ts-ignore\n            key = yield identity_1.Ed25519KeyIdentity.generate(null);\n            yield storage.set(storage_1.KEY_STORAGE_KEY, JSON.stringify(key.toJSON()));\n        }\n        else {\n            if (optionsStorage && keyType === ECDSA_KEY_LABEL) {\n                console.warn(`You are using a custom storage provider that may not support CryptoKey storage. If you are using a custom storage provider that does not support CryptoKey storage, you should use '${ED25519_KEY_LABEL}' as the key type, as it can serialize to a string`);\n            }\n            key = yield identity_1.ECDSAKeyIdentity.generate();\n            yield storage.set(storage_1.KEY_STORAGE_KEY, key.getKeyPair());\n        }\n        return key;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/auth-client.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/db.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/authentication/db.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdbKeyVal = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst idb_1 = __webpack_require__(/*! idb */ \"(ssr)/../../node_modules/idb/build/index.js\");\nconst storage_1 = __webpack_require__(/*! ./storage */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/storage.js\");\nconst AUTH_DB_NAME = 'nfid-auth-client-db';\nconst OBJECT_STORE_NAME = 'ic-keyval';\nconst _openDbStore = (dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    // Clear legacy stored delegations\n    if (storage_1.isBrowser && (localStorage === null || localStorage === void 0 ? void 0 : localStorage.getItem(storage_1.KEY_STORAGE_DELEGATION))) {\n        localStorage.removeItem(storage_1.KEY_STORAGE_DELEGATION);\n        localStorage.removeItem(storage_1.KEY_STORAGE_KEY);\n    }\n    return yield (0, idb_1.openDB)(dbName, version, {\n        upgrade: (database) => {\n            database.objectStoreNames;\n            if (database.objectStoreNames.contains(storeName)) {\n                database.clear(storeName);\n            }\n            database.createObjectStore(storeName);\n        },\n    });\n});\nfunction _getValue(db, storeName, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        return yield db.get(storeName, key);\n    });\n}\nfunction _setValue(db, storeName, key, value) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        return yield db.put(storeName, value, key);\n    });\n}\nfunction _removeValue(db, storeName, key) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        return yield db.delete(storeName, key);\n    });\n}\n/**\n * Simple Key Value store\n * Defaults to `'nfid-auth-client-db'` with an object store of `'ic-keyval'`\n */\nclass IdbKeyVal {\n    /**\n     *\n     * @param {DBCreateOptions} options {@link DbCreateOptions}\n     * @param {DBCreateOptions['dbName']} options.dbName name for the indexeddb database\n     * @default 'nfid-auth-client-db'\n     * @param {DBCreateOptions['storeName']} options.storeName name for the indexeddb Data Store\n     * @default 'ic-keyval'\n     * @param {DBCreateOptions['version']} options.version version of the database. Increment to safely upgrade\n     * @constructs an {@link IdbKeyVal}\n     */\n    static create(options) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { dbName = AUTH_DB_NAME, storeName = OBJECT_STORE_NAME, version = 1, } = options !== null && options !== void 0 ? options : {};\n            const db = yield _openDbStore(dbName, storeName, version);\n            return new IdbKeyVal(db, storeName);\n        });\n    }\n    // Do not use - instead prefer create\n    constructor(_db, _storeName) {\n        this._db = _db;\n        this._storeName = _storeName;\n    }\n    /**\n     * Basic setter\n     * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n     * @param value value to set\n     * @returns void\n     */\n    set(key, value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return yield _setValue(this._db, this._storeName, key, value);\n        });\n    }\n    /**\n     * Basic getter\n     * Pass in a type T for type safety if you know the type the value will have if it is found\n     * @param {IDBValidKey} key string | number | Date | BufferSource | IDBValidKey[]\n     * @returns `Promise<T | null>`\n     * @example\n     * await get<string>('exampleKey') -> 'exampleValue'\n     */\n    get(key) {\n        var _a;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return (_a = (yield _getValue(this._db, this._storeName, key))) !== null && _a !== void 0 ? _a : null;\n        });\n    }\n    /**\n     * Remove a key\n     * @param key {@link IDBValidKey}\n     * @returns void\n     */\n    remove(key) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return yield _removeValue(this._db, this._storeName, key);\n        });\n    }\n}\nexports.IdbKeyVal = IdbKeyVal;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvYXV0aGVudGljYXRpb24vZGIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLGdCQUFnQixtQkFBTyxDQUFDLDJEQUFPO0FBQy9CLGNBQWMsbUJBQU8sQ0FBQyx3REFBSztBQUMzQixrQkFBa0IsbUJBQU8sQ0FBQyx5RkFBVztBQUNyQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1QsS0FBSztBQUNMLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsaUJBQWlCLFNBQVM7QUFDekMsZUFBZSwyQkFBMkI7QUFDMUM7QUFDQSxlQUFlLDhCQUE4QjtBQUM3QztBQUNBLGVBQWUsNEJBQTRCO0FBQzNDLHVCQUF1QjtBQUN2QjtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IscUVBQXFFO0FBQ3pGO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGVBQWUsYUFBYTtBQUM1QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLGFBQWE7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxtQkFBbUI7QUFDbkI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvYXV0aGVudGljYXRpb24vZGIuanM/MjQ2ZiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSWRiS2V5VmFsID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGlkYl8xID0gcmVxdWlyZShcImlkYlwiKTtcbmNvbnN0IHN0b3JhZ2VfMSA9IHJlcXVpcmUoXCIuL3N0b3JhZ2VcIik7XG5jb25zdCBBVVRIX0RCX05BTUUgPSAnbmZpZC1hdXRoLWNsaWVudC1kYic7XG5jb25zdCBPQkpFQ1RfU1RPUkVfTkFNRSA9ICdpYy1rZXl2YWwnO1xuY29uc3QgX29wZW5EYlN0b3JlID0gKGRiTmFtZSA9IEFVVEhfREJfTkFNRSwgc3RvcmVOYW1lID0gT0JKRUNUX1NUT1JFX05BTUUsIHZlcnNpb24pID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgLy8gQ2xlYXIgbGVnYWN5IHN0b3JlZCBkZWxlZ2F0aW9uc1xuICAgIGlmIChzdG9yYWdlXzEuaXNCcm93c2VyICYmIChsb2NhbFN0b3JhZ2UgPT09IG51bGwgfHwgbG9jYWxTdG9yYWdlID09PSB2b2lkIDAgPyB2b2lkIDAgOiBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShzdG9yYWdlXzEuS0VZX1NUT1JBR0VfREVMRUdBVElPTikpKSB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5yZW1vdmVJdGVtKHN0b3JhZ2VfMS5LRVlfU1RPUkFHRV9ERUxFR0FUSU9OKTtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0oc3RvcmFnZV8xLktFWV9TVE9SQUdFX0tFWSk7XG4gICAgfVxuICAgIHJldHVybiB5aWVsZCAoMCwgaWRiXzEub3BlbkRCKShkYk5hbWUsIHZlcnNpb24sIHtcbiAgICAgICAgdXBncmFkZTogKGRhdGFiYXNlKSA9PiB7XG4gICAgICAgICAgICBkYXRhYmFzZS5vYmplY3RTdG9yZU5hbWVzO1xuICAgICAgICAgICAgaWYgKGRhdGFiYXNlLm9iamVjdFN0b3JlTmFtZXMuY29udGFpbnMoc3RvcmVOYW1lKSkge1xuICAgICAgICAgICAgICAgIGRhdGFiYXNlLmNsZWFyKHN0b3JlTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBkYXRhYmFzZS5jcmVhdGVPYmplY3RTdG9yZShzdG9yZU5hbWUpO1xuICAgICAgICB9LFxuICAgIH0pO1xufSk7XG5mdW5jdGlvbiBfZ2V0VmFsdWUoZGIsIHN0b3JlTmFtZSwga2V5KSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4geWllbGQgZGIuZ2V0KHN0b3JlTmFtZSwga2V5KTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIF9zZXRWYWx1ZShkYiwgc3RvcmVOYW1lLCBrZXksIHZhbHVlKSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4geWllbGQgZGIucHV0KHN0b3JlTmFtZSwgdmFsdWUsIGtleSk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBfcmVtb3ZlVmFsdWUoZGIsIHN0b3JlTmFtZSwga2V5KSB7XG4gICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICByZXR1cm4geWllbGQgZGIuZGVsZXRlKHN0b3JlTmFtZSwga2V5KTtcbiAgICB9KTtcbn1cbi8qKlxuICogU2ltcGxlIEtleSBWYWx1ZSBzdG9yZVxuICogRGVmYXVsdHMgdG8gYCduZmlkLWF1dGgtY2xpZW50LWRiJ2Agd2l0aCBhbiBvYmplY3Qgc3RvcmUgb2YgYCdpYy1rZXl2YWwnYFxuICovXG5jbGFzcyBJZGJLZXlWYWwge1xuICAgIC8qKlxuICAgICAqXG4gICAgICogQHBhcmFtIHtEQkNyZWF0ZU9wdGlvbnN9IG9wdGlvbnMge0BsaW5rIERiQ3JlYXRlT3B0aW9uc31cbiAgICAgKiBAcGFyYW0ge0RCQ3JlYXRlT3B0aW9uc1snZGJOYW1lJ119IG9wdGlvbnMuZGJOYW1lIG5hbWUgZm9yIHRoZSBpbmRleGVkZGIgZGF0YWJhc2VcbiAgICAgKiBAZGVmYXVsdCAnbmZpZC1hdXRoLWNsaWVudC1kYidcbiAgICAgKiBAcGFyYW0ge0RCQ3JlYXRlT3B0aW9uc1snc3RvcmVOYW1lJ119IG9wdGlvbnMuc3RvcmVOYW1lIG5hbWUgZm9yIHRoZSBpbmRleGVkZGIgRGF0YSBTdG9yZVxuICAgICAqIEBkZWZhdWx0ICdpYy1rZXl2YWwnXG4gICAgICogQHBhcmFtIHtEQkNyZWF0ZU9wdGlvbnNbJ3ZlcnNpb24nXX0gb3B0aW9ucy52ZXJzaW9uIHZlcnNpb24gb2YgdGhlIGRhdGFiYXNlLiBJbmNyZW1lbnQgdG8gc2FmZWx5IHVwZ3JhZGVcbiAgICAgKiBAY29uc3RydWN0cyBhbiB7QGxpbmsgSWRiS2V5VmFsfVxuICAgICAqL1xuICAgIHN0YXRpYyBjcmVhdGUob3B0aW9ucykge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCB7IGRiTmFtZSA9IEFVVEhfREJfTkFNRSwgc3RvcmVOYW1lID0gT0JKRUNUX1NUT1JFX05BTUUsIHZlcnNpb24gPSAxLCB9ID0gb3B0aW9ucyAhPT0gbnVsbCAmJiBvcHRpb25zICE9PSB2b2lkIDAgPyBvcHRpb25zIDoge307XG4gICAgICAgICAgICBjb25zdCBkYiA9IHlpZWxkIF9vcGVuRGJTdG9yZShkYk5hbWUsIHN0b3JlTmFtZSwgdmVyc2lvbik7XG4gICAgICAgICAgICByZXR1cm4gbmV3IElkYktleVZhbChkYiwgc3RvcmVOYW1lKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIERvIG5vdCB1c2UgLSBpbnN0ZWFkIHByZWZlciBjcmVhdGVcbiAgICBjb25zdHJ1Y3RvcihfZGIsIF9zdG9yZU5hbWUpIHtcbiAgICAgICAgdGhpcy5fZGIgPSBfZGI7XG4gICAgICAgIHRoaXMuX3N0b3JlTmFtZSA9IF9zdG9yZU5hbWU7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJhc2ljIHNldHRlclxuICAgICAqIEBwYXJhbSB7SURCVmFsaWRLZXl9IGtleSBzdHJpbmcgfCBudW1iZXIgfCBEYXRlIHwgQnVmZmVyU291cmNlIHwgSURCVmFsaWRLZXlbXVxuICAgICAqIEBwYXJhbSB2YWx1ZSB2YWx1ZSB0byBzZXRcbiAgICAgKiBAcmV0dXJucyB2b2lkXG4gICAgICovXG4gICAgc2V0KGtleSwgdmFsdWUpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIF9zZXRWYWx1ZSh0aGlzLl9kYiwgdGhpcy5fc3RvcmVOYW1lLCBrZXksIHZhbHVlKTtcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEJhc2ljIGdldHRlclxuICAgICAqIFBhc3MgaW4gYSB0eXBlIFQgZm9yIHR5cGUgc2FmZXR5IGlmIHlvdSBrbm93IHRoZSB0eXBlIHRoZSB2YWx1ZSB3aWxsIGhhdmUgaWYgaXQgaXMgZm91bmRcbiAgICAgKiBAcGFyYW0ge0lEQlZhbGlkS2V5fSBrZXkgc3RyaW5nIHwgbnVtYmVyIHwgRGF0ZSB8IEJ1ZmZlclNvdXJjZSB8IElEQlZhbGlkS2V5W11cbiAgICAgKiBAcmV0dXJucyBgUHJvbWlzZTxUIHwgbnVsbD5gXG4gICAgICogQGV4YW1wbGVcbiAgICAgKiBhd2FpdCBnZXQ8c3RyaW5nPignZXhhbXBsZUtleScpIC0+ICdleGFtcGxlVmFsdWUnXG4gICAgICovXG4gICAgZ2V0KGtleSkge1xuICAgICAgICB2YXIgX2E7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIHJldHVybiAoX2EgPSAoeWllbGQgX2dldFZhbHVlKHRoaXMuX2RiLCB0aGlzLl9zdG9yZU5hbWUsIGtleSkpKSAhPT0gbnVsbCAmJiBfYSAhPT0gdm9pZCAwID8gX2EgOiBudWxsO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGEga2V5XG4gICAgICogQHBhcmFtIGtleSB7QGxpbmsgSURCVmFsaWRLZXl9XG4gICAgICogQHJldHVybnMgdm9pZFxuICAgICAqL1xuICAgIHJlbW92ZShrZXkpIHtcbiAgICAgICAgcmV0dXJuIHRzbGliXzEuX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgcmV0dXJuIHlpZWxkIF9yZW1vdmVWYWx1ZSh0aGlzLl9kYiwgdGhpcy5fc3RvcmVOYW1lLCBrZXkpO1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnRzLklkYktleVZhbCA9IElkYktleVZhbDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/db.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/index.js":
/*!**********************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/authentication/index.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\ntslib_1.__exportStar(__webpack_require__(/*! ./auth-client */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/auth-client.js\"), exports);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvYXV0aGVudGljYXRpb24vaW5kZXguanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsaUdBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvQG5maWQvZW1iZWQvc3JjL2xpYi9hdXRoZW50aWNhdGlvbi9pbmRleC5qcz81ZjU5Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbnRzbGliXzEuX19leHBvcnRTdGFyKHJlcXVpcmUoXCIuL2F1dGgtY2xpZW50XCIpLCBleHBvcnRzKTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/index.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/storage.js":
/*!************************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/authentication/storage.js ***!
  \************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IdbStorage = exports.LocalStorage = exports.isBrowser = exports.DB_VERSION = exports.KEY_VECTOR = exports.KEY_STORAGE_DELEGATION = exports.KEY_STORAGE_KEY = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst db_1 = __webpack_require__(/*! ./db */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/db.js\");\nexports.KEY_STORAGE_KEY = 'identity';\nexports.KEY_STORAGE_DELEGATION = 'delegation';\nexports.KEY_VECTOR = 'iv';\n// Increment if any fields are modified\nexports.DB_VERSION = 1;\nexports.isBrowser = typeof window !== 'undefined';\n/**\n * Legacy implementation of AuthClientStorage, for use where IndexedDb is not available\n */\nclass LocalStorage {\n    constructor(prefix = 'ic-', _localStorage) {\n        this.prefix = prefix;\n        this._localStorage = _localStorage;\n    }\n    get(key) {\n        return Promise.resolve(this._getLocalStorage().getItem(this.prefix + key));\n    }\n    set(key, value) {\n        this._getLocalStorage().setItem(this.prefix + key, value);\n        return Promise.resolve();\n    }\n    remove(key) {\n        this._getLocalStorage().removeItem(this.prefix + key);\n        return Promise.resolve();\n    }\n    _getLocalStorage() {\n        if (this._localStorage) {\n            return this._localStorage;\n        }\n        const ls = typeof window === 'undefined'\n            ? typeof global === 'undefined'\n                ? typeof self === 'undefined'\n                    ? undefined\n                    : self.localStorage\n                : global.localStorage\n            : window.localStorage;\n        if (!ls) {\n            throw new Error('Could not find local storage.');\n        }\n        return ls;\n    }\n}\nexports.LocalStorage = LocalStorage;\n/**\n * IdbStorage is an interface for simple storage of string key-value pairs built on {@link IdbKeyVal}\n *\n * It replaces {@link LocalStorage}\n * @see implements {@link AuthClientStorage}\n */\nclass IdbStorage {\n    get _db() {\n        return new Promise((resolve) => {\n            if (this.initializedDb) {\n                resolve(this.initializedDb);\n                return;\n            }\n            db_1.IdbKeyVal.create({ version: exports.DB_VERSION }).then((db) => {\n                this.initializedDb = db;\n                resolve(db);\n            });\n        });\n    }\n    get(key) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const db = yield this._db;\n            return yield db.get(key);\n            // return (await db.get<string>(key)) ?? null;\n        });\n    }\n    set(key, value) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const db = yield this._db;\n            yield db.set(key, value);\n        });\n    }\n    remove(key) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const db = yield this._db;\n            yield db.remove(key);\n        });\n    }\n}\nexports.IdbStorage = IdbStorage;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvYXV0aGVudGljYXRpb24vc3RvcmFnZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxvQkFBb0IsR0FBRyxpQkFBaUIsR0FBRyxrQkFBa0IsR0FBRyxrQkFBa0IsR0FBRyw4QkFBOEIsR0FBRyx1QkFBdUI7QUFDbEssZ0JBQWdCLG1CQUFPLENBQUMsMkRBQU87QUFDL0IsYUFBYSxtQkFBTyxDQUFDLCtFQUFNO0FBQzNCLHVCQUF1QjtBQUN2Qiw4QkFBOEI7QUFDOUIsa0JBQWtCO0FBQ2xCO0FBQ0Esa0JBQWtCO0FBQ2xCLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQSxxRkFBcUY7QUFDckY7QUFDQSxnQkFBZ0I7QUFDaEIsb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQ0FBb0MsNkJBQTZCO0FBQ2pFO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtCQUFrQiIsInNvdXJjZXMiOlsid2VicGFjazovL2Zyb250ZW5kLy4uLy4uL25vZGVfbW9kdWxlcy9AbmZpZC9lbWJlZC9zcmMvbGliL2F1dGhlbnRpY2F0aW9uL3N0b3JhZ2UuanM/Y2MwNiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSWRiU3RvcmFnZSA9IGV4cG9ydHMuTG9jYWxTdG9yYWdlID0gZXhwb3J0cy5pc0Jyb3dzZXIgPSBleHBvcnRzLkRCX1ZFUlNJT04gPSBleHBvcnRzLktFWV9WRUNUT1IgPSBleHBvcnRzLktFWV9TVE9SQUdFX0RFTEVHQVRJT04gPSBleHBvcnRzLktFWV9TVE9SQUdFX0tFWSA9IHZvaWQgMDtcbmNvbnN0IHRzbGliXzEgPSByZXF1aXJlKFwidHNsaWJcIik7XG5jb25zdCBkYl8xID0gcmVxdWlyZShcIi4vZGJcIik7XG5leHBvcnRzLktFWV9TVE9SQUdFX0tFWSA9ICdpZGVudGl0eSc7XG5leHBvcnRzLktFWV9TVE9SQUdFX0RFTEVHQVRJT04gPSAnZGVsZWdhdGlvbic7XG5leHBvcnRzLktFWV9WRUNUT1IgPSAnaXYnO1xuLy8gSW5jcmVtZW50IGlmIGFueSBmaWVsZHMgYXJlIG1vZGlmaWVkXG5leHBvcnRzLkRCX1ZFUlNJT04gPSAxO1xuZXhwb3J0cy5pc0Jyb3dzZXIgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJztcbi8qKlxuICogTGVnYWN5IGltcGxlbWVudGF0aW9uIG9mIEF1dGhDbGllbnRTdG9yYWdlLCBmb3IgdXNlIHdoZXJlIEluZGV4ZWREYiBpcyBub3QgYXZhaWxhYmxlXG4gKi9cbmNsYXNzIExvY2FsU3RvcmFnZSB7XG4gICAgY29uc3RydWN0b3IocHJlZml4ID0gJ2ljLScsIF9sb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgdGhpcy5wcmVmaXggPSBwcmVmaXg7XG4gICAgICAgIHRoaXMuX2xvY2FsU3RvcmFnZSA9IF9sb2NhbFN0b3JhZ2U7XG4gICAgfVxuICAgIGdldChrZXkpIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh0aGlzLl9nZXRMb2NhbFN0b3JhZ2UoKS5nZXRJdGVtKHRoaXMucHJlZml4ICsga2V5KSk7XG4gICAgfVxuICAgIHNldChrZXksIHZhbHVlKSB7XG4gICAgICAgIHRoaXMuX2dldExvY2FsU3RvcmFnZSgpLnNldEl0ZW0odGhpcy5wcmVmaXggKyBrZXksIHZhbHVlKTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSgpO1xuICAgIH1cbiAgICByZW1vdmUoa2V5KSB7XG4gICAgICAgIHRoaXMuX2dldExvY2FsU3RvcmFnZSgpLnJlbW92ZUl0ZW0odGhpcy5wcmVmaXggKyBrZXkpO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7XG4gICAgfVxuICAgIF9nZXRMb2NhbFN0b3JhZ2UoKSB7XG4gICAgICAgIGlmICh0aGlzLl9sb2NhbFN0b3JhZ2UpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLl9sb2NhbFN0b3JhZ2U7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgbHMgPSB0eXBlb2Ygd2luZG93ID09PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyB0eXBlb2YgZ2xvYmFsID09PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgICAgID8gdHlwZW9mIHNlbGYgPT09ICd1bmRlZmluZWQnXG4gICAgICAgICAgICAgICAgICAgID8gdW5kZWZpbmVkXG4gICAgICAgICAgICAgICAgICAgIDogc2VsZi5sb2NhbFN0b3JhZ2VcbiAgICAgICAgICAgICAgICA6IGdsb2JhbC5sb2NhbFN0b3JhZ2VcbiAgICAgICAgICAgIDogd2luZG93LmxvY2FsU3RvcmFnZTtcbiAgICAgICAgaWYgKCFscykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb3VsZCBub3QgZmluZCBsb2NhbCBzdG9yYWdlLicpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBscztcbiAgICB9XG59XG5leHBvcnRzLkxvY2FsU3RvcmFnZSA9IExvY2FsU3RvcmFnZTtcbi8qKlxuICogSWRiU3RvcmFnZSBpcyBhbiBpbnRlcmZhY2UgZm9yIHNpbXBsZSBzdG9yYWdlIG9mIHN0cmluZyBrZXktdmFsdWUgcGFpcnMgYnVpbHQgb24ge0BsaW5rIElkYktleVZhbH1cbiAqXG4gKiBJdCByZXBsYWNlcyB7QGxpbmsgTG9jYWxTdG9yYWdlfVxuICogQHNlZSBpbXBsZW1lbnRzIHtAbGluayBBdXRoQ2xpZW50U3RvcmFnZX1cbiAqL1xuY2xhc3MgSWRiU3RvcmFnZSB7XG4gICAgZ2V0IF9kYigpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgICAgICBpZiAodGhpcy5pbml0aWFsaXplZERiKSB7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh0aGlzLmluaXRpYWxpemVkRGIpO1xuICAgICAgICAgICAgICAgIHJldHVybjtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGRiXzEuSWRiS2V5VmFsLmNyZWF0ZSh7IHZlcnNpb246IGV4cG9ydHMuREJfVkVSU0lPTiB9KS50aGVuKChkYikgPT4ge1xuICAgICAgICAgICAgICAgIHRoaXMuaW5pdGlhbGl6ZWREYiA9IGRiO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoZGIpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBnZXQoa2V5KSB7XG4gICAgICAgIHJldHVybiB0c2xpYl8xLl9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgIGNvbnN0IGRiID0geWllbGQgdGhpcy5fZGI7XG4gICAgICAgICAgICByZXR1cm4geWllbGQgZGIuZ2V0KGtleSk7XG4gICAgICAgICAgICAvLyByZXR1cm4gKGF3YWl0IGRiLmdldDxzdHJpbmc+KGtleSkpID8/IG51bGw7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzZXQoa2V5LCB2YWx1ZSkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBkYiA9IHlpZWxkIHRoaXMuX2RiO1xuICAgICAgICAgICAgeWllbGQgZGIuc2V0KGtleSwgdmFsdWUpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVtb3ZlKGtleSkge1xuICAgICAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgICAgICBjb25zdCBkYiA9IHlpZWxkIHRoaXMuX2RiO1xuICAgICAgICAgICAgeWllbGQgZGIucmVtb3ZlKGtleSk7XG4gICAgICAgIH0pO1xuICAgIH1cbn1cbmV4cG9ydHMuSWRiU3RvcmFnZSA9IElkYlN0b3JhZ2U7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/storage.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/constants.js":
/*!******************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/iframe/constants.js ***!
  \******************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IFRAME_ID = void 0;\nexports.IFRAME_ID = 'nfid-embed';\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL2NvbnN0YW50cy5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxpQkFBaUI7QUFDakIsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL2NvbnN0YW50cy5qcz80YmQ3Il0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5JRlJBTUVfSUQgPSB2b2lkIDA7XG5leHBvcnRzLklGUkFNRV9JRCA9ICduZmlkLWVtYmVkJztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/constants.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js":
/*!*******************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.getIframe = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/constants.js\");\nconst getIframe = () => {\n    const nfidIframe = document.getElementById(constants_1.IFRAME_ID);\n    if (!nfidIframe || !nfidIframe.contentWindow) {\n        throw new Error('nfid iframe not initialized');\n    }\n    return nfidIframe;\n};\nexports.getIframe = getIframe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL2dldC1pZnJhbWUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsaUJBQWlCO0FBQ2pCLG9CQUFvQixtQkFBTyxDQUFDLHFGQUFhO0FBQ3pDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsaUJBQWlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL2dldC1pZnJhbWUuanM/OTM5MCJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuZ2V0SWZyYW1lID0gdm9pZCAwO1xuY29uc3QgY29uc3RhbnRzXzEgPSByZXF1aXJlKFwiLi9jb25zdGFudHNcIik7XG5jb25zdCBnZXRJZnJhbWUgPSAoKSA9PiB7XG4gICAgY29uc3QgbmZpZElmcmFtZSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGNvbnN0YW50c18xLklGUkFNRV9JRCk7XG4gICAgaWYgKCFuZmlkSWZyYW1lIHx8ICFuZmlkSWZyYW1lLmNvbnRlbnRXaW5kb3cpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCduZmlkIGlmcmFtZSBub3QgaW5pdGlhbGl6ZWQnKTtcbiAgICB9XG4gICAgcmV0dXJuIG5maWRJZnJhbWU7XG59O1xuZXhwb3J0cy5nZXRJZnJhbWUgPSBnZXRJZnJhbWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js":
/*!********************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js ***!
  \********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.buildIframe = exports.baseStyle = void 0;\nconst constants_1 = __webpack_require__(/*! ./constants */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/constants.js\");\nconst get_iframe_1 = __webpack_require__(/*! ./get-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js\");\nexports.baseStyle = {\n    position: 'fixed',\n    top: '0',\n    left: '0',\n    border: 'none',\n    width: '100%',\n    height: '100%',\n    zIndex: '9999',\n    background: 'rgba(9,10,19,0.5)',\n    display: 'none',\n};\nconst buildQuery = (params) => {\n    console.debug('buildQuery', { params });\n    const keys = Object.keys(params).filter((key) => Boolean(params[key]));\n    return keys.length\n        ? Object.keys(params).reduce((acc, key, index) => {\n            const prefix = index === 0 ? '?' : '&';\n            return `${acc}${prefix}${key}=${params[key]}`;\n        }, '')\n        : '';\n};\nconst buildIframe = ({ origin, applicationLogo, applicationName, onLoad, }) => {\n    console.debug('buildIframe');\n    const QUERY = buildQuery({ applicationLogo, applicationName });\n    const PATH = 'embed';\n    const PROVIDER_URL = new URL(`${origin}/${PATH}${QUERY}`);\n    console.debug('buildIframe', { PROVIDER_URL, QUERY, PATH });\n    let nfidIframe;\n    try {\n        nfidIframe = (0, get_iframe_1.getIframe)();\n    }\n    catch (e) {\n        nfidIframe = document.createElement('iframe');\n    }\n    nfidIframe.id = constants_1.IFRAME_ID;\n    nfidIframe.src = PROVIDER_URL.href;\n    nfidIframe.allow = 'publickey-credentials-get';\n    Object.assign(nfidIframe.style, exports.baseStyle);\n    nfidIframe.onload = onLoad;\n    document.body.appendChild(nfidIframe);\n    return nfidIframe;\n};\nexports.buildIframe = buildIframe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL21ha2UtaWZyYW1lLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELG1CQUFtQixHQUFHLGlCQUFpQjtBQUN2QyxvQkFBb0IsbUJBQU8sQ0FBQyxxRkFBYTtBQUN6QyxxQkFBcUIsbUJBQU8sQ0FBQyx1RkFBYztBQUMzQyxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLElBQUksRUFBRSxPQUFPLEVBQUUsSUFBSSxHQUFHLFlBQVk7QUFDeEQsU0FBUztBQUNUO0FBQ0E7QUFDQSx1QkFBdUIsbURBQW1EO0FBQzFFO0FBQ0EsK0JBQStCLGtDQUFrQztBQUNqRTtBQUNBLG9DQUFvQyxPQUFPLEdBQUcsS0FBSyxFQUFFLE1BQU07QUFDM0QsbUNBQW1DLDJCQUEyQjtBQUM5RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvQG5maWQvZW1iZWQvc3JjL2xpYi9pZnJhbWUvbWFrZS1pZnJhbWUuanM/N2Y1NiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuYnVpbGRJZnJhbWUgPSBleHBvcnRzLmJhc2VTdHlsZSA9IHZvaWQgMDtcbmNvbnN0IGNvbnN0YW50c18xID0gcmVxdWlyZShcIi4vY29uc3RhbnRzXCIpO1xuY29uc3QgZ2V0X2lmcmFtZV8xID0gcmVxdWlyZShcIi4vZ2V0LWlmcmFtZVwiKTtcbmV4cG9ydHMuYmFzZVN0eWxlID0ge1xuICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgIHRvcDogJzAnLFxuICAgIGxlZnQ6ICcwJyxcbiAgICBib3JkZXI6ICdub25lJyxcbiAgICB3aWR0aDogJzEwMCUnLFxuICAgIGhlaWdodDogJzEwMCUnLFxuICAgIHpJbmRleDogJzk5OTknLFxuICAgIGJhY2tncm91bmQ6ICdyZ2JhKDksMTAsMTksMC41KScsXG4gICAgZGlzcGxheTogJ25vbmUnLFxufTtcbmNvbnN0IGJ1aWxkUXVlcnkgPSAocGFyYW1zKSA9PiB7XG4gICAgY29uc29sZS5kZWJ1ZygnYnVpbGRRdWVyeScsIHsgcGFyYW1zIH0pO1xuICAgIGNvbnN0IGtleXMgPSBPYmplY3Qua2V5cyhwYXJhbXMpLmZpbHRlcigoa2V5KSA9PiBCb29sZWFuKHBhcmFtc1trZXldKSk7XG4gICAgcmV0dXJuIGtleXMubGVuZ3RoXG4gICAgICAgID8gT2JqZWN0LmtleXMocGFyYW1zKS5yZWR1Y2UoKGFjYywga2V5LCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcHJlZml4ID0gaW5kZXggPT09IDAgPyAnPycgOiAnJic7XG4gICAgICAgICAgICByZXR1cm4gYCR7YWNjfSR7cHJlZml4fSR7a2V5fT0ke3BhcmFtc1trZXldfWA7XG4gICAgICAgIH0sICcnKVxuICAgICAgICA6ICcnO1xufTtcbmNvbnN0IGJ1aWxkSWZyYW1lID0gKHsgb3JpZ2luLCBhcHBsaWNhdGlvbkxvZ28sIGFwcGxpY2F0aW9uTmFtZSwgb25Mb2FkLCB9KSA9PiB7XG4gICAgY29uc29sZS5kZWJ1ZygnYnVpbGRJZnJhbWUnKTtcbiAgICBjb25zdCBRVUVSWSA9IGJ1aWxkUXVlcnkoeyBhcHBsaWNhdGlvbkxvZ28sIGFwcGxpY2F0aW9uTmFtZSB9KTtcbiAgICBjb25zdCBQQVRIID0gJ2VtYmVkJztcbiAgICBjb25zdCBQUk9WSURFUl9VUkwgPSBuZXcgVVJMKGAke29yaWdpbn0vJHtQQVRIfSR7UVVFUll9YCk7XG4gICAgY29uc29sZS5kZWJ1ZygnYnVpbGRJZnJhbWUnLCB7IFBST1ZJREVSX1VSTCwgUVVFUlksIFBBVEggfSk7XG4gICAgbGV0IG5maWRJZnJhbWU7XG4gICAgdHJ5IHtcbiAgICAgICAgbmZpZElmcmFtZSA9ICgwLCBnZXRfaWZyYW1lXzEuZ2V0SWZyYW1lKSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZSkge1xuICAgICAgICBuZmlkSWZyYW1lID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnaWZyYW1lJyk7XG4gICAgfVxuICAgIG5maWRJZnJhbWUuaWQgPSBjb25zdGFudHNfMS5JRlJBTUVfSUQ7XG4gICAgbmZpZElmcmFtZS5zcmMgPSBQUk9WSURFUl9VUkwuaHJlZjtcbiAgICBuZmlkSWZyYW1lLmFsbG93ID0gJ3B1YmxpY2tleS1jcmVkZW50aWFscy1nZXQnO1xuICAgIE9iamVjdC5hc3NpZ24obmZpZElmcmFtZS5zdHlsZSwgZXhwb3J0cy5iYXNlU3R5bGUpO1xuICAgIG5maWRJZnJhbWUub25sb2FkID0gb25Mb2FkO1xuICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQobmZpZElmcmFtZSk7XG4gICAgcmV0dXJuIG5maWRJZnJhbWU7XG59O1xuZXhwb3J0cy5idWlsZElmcmFtZSA9IGJ1aWxkSWZyYW1lO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/manager.js":
/*!****************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/iframe/manager.js ***!
  \****************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.IframeManager = void 0;\nconst make_iframe_1 = __webpack_require__(/*! ./make-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js\");\nclass IframeManager {\n    static init({ providerUrl, onLoad, }) {\n        console.debug('IframeManager.constructor', { providerUrl });\n        IframeManager._iframe = (0, make_iframe_1.buildIframe)({ origin: providerUrl, onLoad });\n    }\n    static show() {\n        if (!this._iframe)\n            throw new Error('IframeManager not initialized');\n        Object.assign(this._iframe.style, Object.assign(Object.assign({}, make_iframe_1.baseStyle), { display: 'block' }));\n    }\n    static hide() {\n        if (!this._iframe)\n            throw new Error('IframeManager not initialized');\n        Object.assign(this._iframe.style, Object.assign(Object.assign({}, make_iframe_1.baseStyle), { display: 'none' }));\n    }\n    static isVisible() {\n        return false;\n    }\n}\nexports.IframeManager = IframeManager;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL21hbmFnZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QscUJBQXFCO0FBQ3JCLHNCQUFzQixtQkFBTyxDQUFDLHlGQUFlO0FBQzdDO0FBQ0Esa0JBQWtCLHNCQUFzQjtBQUN4QyxxREFBcUQsYUFBYTtBQUNsRSxpRUFBaUUsNkJBQTZCO0FBQzlGO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esd0VBQXdFLDhCQUE4QixrQkFBa0I7QUFDeEg7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3RUFBd0UsOEJBQThCLGlCQUFpQjtBQUN2SDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL21hbmFnZXIuanM/OTFjYiJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuSWZyYW1lTWFuYWdlciA9IHZvaWQgMDtcbmNvbnN0IG1ha2VfaWZyYW1lXzEgPSByZXF1aXJlKFwiLi9tYWtlLWlmcmFtZVwiKTtcbmNsYXNzIElmcmFtZU1hbmFnZXIge1xuICAgIHN0YXRpYyBpbml0KHsgcHJvdmlkZXJVcmwsIG9uTG9hZCwgfSkge1xuICAgICAgICBjb25zb2xlLmRlYnVnKCdJZnJhbWVNYW5hZ2VyLmNvbnN0cnVjdG9yJywgeyBwcm92aWRlclVybCB9KTtcbiAgICAgICAgSWZyYW1lTWFuYWdlci5faWZyYW1lID0gKDAsIG1ha2VfaWZyYW1lXzEuYnVpbGRJZnJhbWUpKHsgb3JpZ2luOiBwcm92aWRlclVybCwgb25Mb2FkIH0pO1xuICAgIH1cbiAgICBzdGF0aWMgc2hvdygpIHtcbiAgICAgICAgaWYgKCF0aGlzLl9pZnJhbWUpXG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0lmcmFtZU1hbmFnZXIgbm90IGluaXRpYWxpemVkJyk7XG4gICAgICAgIE9iamVjdC5hc3NpZ24odGhpcy5faWZyYW1lLnN0eWxlLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1ha2VfaWZyYW1lXzEuYmFzZVN0eWxlKSwgeyBkaXNwbGF5OiAnYmxvY2snIH0pKTtcbiAgICB9XG4gICAgc3RhdGljIGhpZGUoKSB7XG4gICAgICAgIGlmICghdGhpcy5faWZyYW1lKVxuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdJZnJhbWVNYW5hZ2VyIG5vdCBpbml0aWFsaXplZCcpO1xuICAgICAgICBPYmplY3QuYXNzaWduKHRoaXMuX2lmcmFtZS5zdHlsZSwgT2JqZWN0LmFzc2lnbihPYmplY3QuYXNzaWduKHt9LCBtYWtlX2lmcmFtZV8xLmJhc2VTdHlsZSksIHsgZGlzcGxheTogJ25vbmUnIH0pKTtcbiAgICB9XG4gICAgc3RhdGljIGlzVmlzaWJsZSgpIHtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbn1cbmV4cG9ydHMuSWZyYW1lTWFuYWdlciA9IElmcmFtZU1hbmFnZXI7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/manager.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/mount-iframe.js":
/*!*********************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/iframe/mount-iframe.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.hideIframe = exports.showIframe = exports.mountIframe = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst get_iframe_1 = __webpack_require__(/*! ./get-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js\");\nconst make_iframe_1 = __webpack_require__(/*! ./make-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js\");\nconst mountIframe = ({ iframe, onLoad }) => tslib_1.__awaiter(void 0, void 0, void 0, function* () {\n    console.debug('mountIframe', { iframe });\n    window.document.body.appendChild(iframe);\n    iframe.onload = onLoad;\n});\nexports.mountIframe = mountIframe;\nconst showIframe = () => {\n    const iframe = (0, get_iframe_1.getIframe)();\n    if (!iframe)\n        return;\n    console.debug('showIframe', { iframe });\n    Object.assign(iframe.style, Object.assign(Object.assign({}, make_iframe_1.baseStyle), { display: 'block' }));\n};\nexports.showIframe = showIframe;\nconst hideIframe = () => {\n    const iframe = (0, get_iframe_1.getIframe)();\n    if (!iframe)\n        return;\n    console.debug('hideIframe', { iframe });\n    Object.assign(iframe.style, Object.assign(Object.assign({}, make_iframe_1.baseStyle), { display: 'none' }));\n};\nexports.hideIframe = hideIframe;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvaWZyYW1lL21vdW50LWlmcmFtZS5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxrQkFBa0IsR0FBRyxrQkFBa0IsR0FBRyxtQkFBbUI7QUFDN0QsZ0JBQWdCLG1CQUFPLENBQUMsMkRBQU87QUFDL0IscUJBQXFCLG1CQUFPLENBQUMsdUZBQWM7QUFDM0Msc0JBQXNCLG1CQUFPLENBQUMseUZBQWU7QUFDN0MsdUJBQXVCLGdCQUFnQjtBQUN2QyxtQ0FBbUMsUUFBUTtBQUMzQztBQUNBO0FBQ0EsQ0FBQztBQUNELG1CQUFtQjtBQUNuQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtDQUFrQyxRQUFRO0FBQzFDLDhEQUE4RCw4QkFBOEIsa0JBQWtCO0FBQzlHO0FBQ0Esa0JBQWtCO0FBQ2xCO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0NBQWtDLFFBQVE7QUFDMUMsOERBQThELDhCQUE4QixpQkFBaUI7QUFDN0c7QUFDQSxrQkFBa0IiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9mcm9udGVuZC8uLi8uLi9ub2RlX21vZHVsZXMvQG5maWQvZW1iZWQvc3JjL2xpYi9pZnJhbWUvbW91bnQtaWZyYW1lLmpzPzFkYzEiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG5leHBvcnRzLmhpZGVJZnJhbWUgPSBleHBvcnRzLnNob3dJZnJhbWUgPSBleHBvcnRzLm1vdW50SWZyYW1lID0gdm9pZCAwO1xuY29uc3QgdHNsaWJfMSA9IHJlcXVpcmUoXCJ0c2xpYlwiKTtcbmNvbnN0IGdldF9pZnJhbWVfMSA9IHJlcXVpcmUoXCIuL2dldC1pZnJhbWVcIik7XG5jb25zdCBtYWtlX2lmcmFtZV8xID0gcmVxdWlyZShcIi4vbWFrZS1pZnJhbWVcIik7XG5jb25zdCBtb3VudElmcmFtZSA9ICh7IGlmcmFtZSwgb25Mb2FkIH0pID0+IHRzbGliXzEuX19hd2FpdGVyKHZvaWQgMCwgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgY29uc29sZS5kZWJ1ZygnbW91bnRJZnJhbWUnLCB7IGlmcmFtZSB9KTtcbiAgICB3aW5kb3cuZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChpZnJhbWUpO1xuICAgIGlmcmFtZS5vbmxvYWQgPSBvbkxvYWQ7XG59KTtcbmV4cG9ydHMubW91bnRJZnJhbWUgPSBtb3VudElmcmFtZTtcbmNvbnN0IHNob3dJZnJhbWUgPSAoKSA9PiB7XG4gICAgY29uc3QgaWZyYW1lID0gKDAsIGdldF9pZnJhbWVfMS5nZXRJZnJhbWUpKCk7XG4gICAgaWYgKCFpZnJhbWUpXG4gICAgICAgIHJldHVybjtcbiAgICBjb25zb2xlLmRlYnVnKCdzaG93SWZyYW1lJywgeyBpZnJhbWUgfSk7XG4gICAgT2JqZWN0LmFzc2lnbihpZnJhbWUuc3R5bGUsIE9iamVjdC5hc3NpZ24oT2JqZWN0LmFzc2lnbih7fSwgbWFrZV9pZnJhbWVfMS5iYXNlU3R5bGUpLCB7IGRpc3BsYXk6ICdibG9jaycgfSkpO1xufTtcbmV4cG9ydHMuc2hvd0lmcmFtZSA9IHNob3dJZnJhbWU7XG5jb25zdCBoaWRlSWZyYW1lID0gKCkgPT4ge1xuICAgIGNvbnN0IGlmcmFtZSA9ICgwLCBnZXRfaWZyYW1lXzEuZ2V0SWZyYW1lKSgpO1xuICAgIGlmICghaWZyYW1lKVxuICAgICAgICByZXR1cm47XG4gICAgY29uc29sZS5kZWJ1ZygnaGlkZUlmcmFtZScsIHsgaWZyYW1lIH0pO1xuICAgIE9iamVjdC5hc3NpZ24oaWZyYW1lLnN0eWxlLCBPYmplY3QuYXNzaWduKE9iamVjdC5hc3NpZ24oe30sIG1ha2VfaWZyYW1lXzEuYmFzZVN0eWxlKSwgeyBkaXNwbGF5OiAnbm9uZScgfSkpO1xufTtcbmV4cG9ydHMuaGlkZUlmcmFtZSA9IGhpZGVJZnJhbWU7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/mount-iframe.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/nfid.js":
/*!******************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/nfid.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NFID = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst make_iframe_1 = __webpack_require__(/*! ./iframe/make-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/make-iframe.js\");\nconst mount_iframe_1 = __webpack_require__(/*! ./iframe/mount-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/mount-iframe.js\");\nconst authentication_1 = __webpack_require__(/*! ./authentication */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/authentication/index.js\");\nconst get_iframe_1 = __webpack_require__(/*! ./iframe/get-iframe */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/iframe/get-iframe.js\");\nconst postmsg_rpc_1 = __webpack_require__(/*! ./postmsg-rpc */ \"(ssr)/../../node_modules/@nfid/embed/src/lib/postmsg-rpc.js\");\nclass NFID {\n    constructor(_nfidConfig) {\n        this._nfidConfig = _nfidConfig;\n        console.debug('NFID.constructor', { _nfidConfig });\n    }\n    static initIframe(nfidConfig) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NFID.initIframe', { nfidConfig });\n            return new Promise((resolve) => {\n                var _a, _b;\n                const nfidIframe = (0, make_iframe_1.buildIframe)({\n                    origin: nfidConfig.origin,\n                    applicationName: (_a = nfidConfig.application) === null || _a === void 0 ? void 0 : _a.name,\n                    applicationLogo: (_b = nfidConfig.application) === null || _b === void 0 ? void 0 : _b.logo,\n                    onLoad: () => {\n                        NFID.isIframeInstantiated = true;\n                        NFID.nfidIframe = nfidIframe;\n                        console.debug('NFID.initIframe: iframe loaded', { nfidIframe });\n                        resolve(true);\n                    },\n                });\n            });\n        });\n    }\n    static init(params) {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const { origin = 'https://nfid.one' } = params, nfidConfig = tslib_1.__rest(params, [\"origin\"]);\n            return yield new Promise((resolve, reject) => {\n                const removeEventListener = () => {\n                    window.removeEventListener('message', handleReadyEvent);\n                };\n                const timeout = setTimeout(() => {\n                    removeEventListener();\n                    reject(new Error('NFID.init iframe did not respond in time'));\n                }, 30000);\n                const handleReadyEvent = (event) => {\n                    if (event.data.type === 'nfid_ready') {\n                        removeEventListener();\n                        console.debug('NFID.init authClient initiated');\n                        clearTimeout(timeout);\n                        resolve(new this(Object.assign({ origin }, nfidConfig)));\n                    }\n                };\n                window.addEventListener('message', handleReadyEvent);\n                console.debug('NFID.init', Object.assign({ origin }, nfidConfig));\n                NFID.initIframe(Object.assign({ origin }, nfidConfig));\n                console.debug('NFID.init iframe initiated');\n                authentication_1.NfidAuthClient.create({\n                    identity: nfidConfig.identity,\n                    storage: nfidConfig.storage,\n                    keyType: nfidConfig.keyType,\n                    idleOptions: nfidConfig.idleOptions,\n                }).then((client) => {\n                    NFID._authClient = client;\n                });\n            });\n        });\n    }\n    /**\n     * Retrieves a delegation from the NFID iframe.\n     * @param options An optional object containing the following properties:\n     * @param options.targets An array of target strings.\n     * @param options.targets:\n     * @param options.maxTimeToLive: The maximum time to live as a BigInt.\n     * @param options.derivationOrigin: The derivation origin as a string or URL.\n     * @returns A promise that resolves with an Identity object or rejects with an error object.\n     * @throws An error if the NFID iframe is not instantiated.\n     */\n    getDelegation(options) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NFID.connect');\n            const derivationOrigin = (options === null || options === void 0 ? void 0 : options.derivationOrigin) || ((_b = (_a = this._nfidConfig) === null || _a === void 0 ? void 0 : _a.ic) === null || _b === void 0 ? void 0 : _b.derivationOrigin);\n            if (!NFID.isIframeInstantiated)\n                throw new Error('NFID iframe not instantiated');\n            (0, mount_iframe_1.showIframe)();\n            return new Promise((resolve, reject) => {\n                NFID._authClient\n                    .login(Object.assign(Object.assign({}, options), { derivationOrigin }))\n                    .then((identity) => resolve(identity))\n                    .catch((e) => reject({ error: e.message }))\n                    .finally(mount_iframe_1.hideIframe);\n            });\n        });\n    }\n    /**\n     * Updates the global delegation for the current user.\n     * @param options - The options for the delegation update.\n     * @param options.targets - The targets for the delegation update.\n     * @param options.maxTimeToLive - The maximum time to live for the delegation update.\n     * @returns A Promise that resolves with the delegation update response.\n     * @throws Any error that occurs during the delegation update.\n     */\n    updateGlobalDelegation(options) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            const derivationOrigin = (options === null || options === void 0 ? void 0 : options.derivationOrigin) || ((_b = (_a = this._nfidConfig) === null || _a === void 0 ? void 0 : _a.ic) === null || _b === void 0 ? void 0 : _b.derivationOrigin);\n            console.debug('NFID.renewDelegation');\n            const delegationType = NFID._authClient.getDelegationType();\n            if (delegationType === authentication_1.DelegationType.ANONYMOUS)\n                throw new Error('You can not update delegation from anonymous user');\n            const response = yield NFID._authClient.renewDelegation(Object.assign(Object.assign({}, options), { derivationOrigin }));\n            if ('error' in response)\n                throw new Error(response.error.message);\n            return response;\n        });\n    }\n    getDelegationType() {\n        return NFID._authClient.getDelegationType();\n    }\n    logout() {\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            return NFID._authClient.logout();\n        });\n    }\n    requestTransferFT(options) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NFID.requestTransferFT');\n            const derivationOrigin = (options === null || options === void 0 ? void 0 : options.derivationOrigin) || ((_b = (_a = this._nfidConfig) === null || _a === void 0 ? void 0 : _a.ic) === null || _b === void 0 ? void 0 : _b.derivationOrigin);\n            const delegationType = NFID._authClient.getDelegationType();\n            if (delegationType === authentication_1.DelegationType.ANONYMOUS)\n                throw new Error('You can not call requestTransferFT from anonymous user');\n            if (!NFID.nfidIframe)\n                throw new Error('NFID iframe not instantiated');\n            (0, mount_iframe_1.showIframe)();\n            const iframe = (0, get_iframe_1.getIframe)();\n            const response = yield (0, postmsg_rpc_1.request)(iframe, {\n                method: 'ic_requestTransfer',\n                params: [\n                    {\n                        receiver: options.receiver,\n                        amount: options.amount,\n                        memo: options.memo,\n                        derivationOrigin,\n                    },\n                ],\n            });\n            (0, mount_iframe_1.hideIframe)();\n            if ('error' in response) {\n                throw Error(response.error.message);\n            }\n            return response.result;\n        });\n    }\n    requestTransferNFT(options) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NFID.requestTransferNFT');\n            const derivationOrigin = (options === null || options === void 0 ? void 0 : options.derivationOrigin) || ((_b = (_a = this._nfidConfig) === null || _a === void 0 ? void 0 : _a.ic) === null || _b === void 0 ? void 0 : _b.derivationOrigin);\n            const delegationType = NFID._authClient.getDelegationType();\n            if (delegationType === authentication_1.DelegationType.ANONYMOUS)\n                throw new Error('You can not call requestTransferNFT from anonymous user');\n            if (!NFID.nfidIframe)\n                throw new Error('NFID iframe not instantiated');\n            (0, mount_iframe_1.showIframe)();\n            const iframe = (0, get_iframe_1.getIframe)();\n            const response = yield (0, postmsg_rpc_1.request)(iframe, {\n                method: 'ic_requestTransfer',\n                params: [\n                    {\n                        receiver: options.receiver,\n                        tokenId: options.tokenId,\n                        derivationOrigin,\n                    },\n                ],\n            });\n            (0, mount_iframe_1.hideIframe)();\n            if ('error' in response) {\n                throw Error(response.error.message);\n            }\n            return response.result;\n        });\n    }\n    /**\n     * Sends a request to a 3rd party canister.\n     * @param method - The method to call on the canister.\n     * @param canisterId - The ID of the canister to call.\n     * @param parameters - Optional parameters to pass to the canister method.\n     * @param derivationOrigin - Optional derivation origin to use for the request.\n     * @returns A Promise that resolves with the result of the canister call.\n     */\n    requestCanisterCall({ method, canisterId, parameters, derivationOrigin, }) {\n        var _a, _b;\n        return tslib_1.__awaiter(this, void 0, void 0, function* () {\n            console.debug('NFID.requestCanisterCall', {\n                method,\n                canisterId,\n                parameters,\n                derivationOrigin,\n            });\n            const delegationType = NFID._authClient.getDelegationType();\n            if (delegationType === authentication_1.DelegationType.ANONYMOUS)\n                throw new Error('You can not call requestCanisterCall from anonymous user');\n            if (!NFID.nfidIframe)\n                throw new Error('NFID iframe not instantiated');\n            (0, mount_iframe_1.showIframe)();\n            const iframe = (0, get_iframe_1.getIframe)();\n            const response = yield (0, postmsg_rpc_1.request)(iframe, {\n                method: 'ic_canisterCall',\n                params: [\n                    {\n                        method,\n                        canisterId,\n                        parameters,\n                        derivationOrigin: derivationOrigin || ((_b = (_a = this._nfidConfig) === null || _a === void 0 ? void 0 : _a.ic) === null || _b === void 0 ? void 0 : _b.derivationOrigin),\n                    },\n                ],\n            });\n            (0, mount_iframe_1.hideIframe)();\n            if ('error' in response) {\n                throw Error(response.error.message);\n            }\n            return response.result;\n        });\n    }\n    get isAuthenticated() {\n        return NFID._authClient.isAuthenticated;\n    }\n    getIdentity() {\n        return NFID._authClient.getIdentity();\n    }\n}\nexports.NFID = NFID;\nNFID.isIframeInstantiated = false;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/nfid.js\n");

/***/ }),

/***/ "(ssr)/../../node_modules/@nfid/embed/src/lib/postmsg-rpc.js":
/*!*************************************************************!*\
  !*** ../../node_modules/@nfid/embed/src/lib/postmsg-rpc.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.request = exports.RPC_BASE = void 0;\nconst tslib_1 = __webpack_require__(/*! tslib */ \"(ssr)/../../node_modules/tslib/tslib.es6.mjs\");\nconst uuid = __webpack_require__(/*! uuid */ \"(ssr)/../../node_modules/uuid/dist/esm-node/index.js\");\nexports.RPC_BASE = { jsonrpc: '2.0' };\nclass ProviderRpcError extends Error {\n    constructor(message, code, data) {\n        super(message);\n        this.code = code;\n        this.data = data;\n    }\n}\nfunction request(iframe, { method, params }, options = {}) {\n    return tslib_1.__awaiter(this, void 0, void 0, function* () {\n        const requestId = uuid.v4();\n        const req = {\n            jsonrpc: '2.0',\n            id: requestId,\n            method,\n            params,\n            options,\n        };\n        console.debug('postmsg-rpc request', Object.assign({}, req));\n        return new Promise((resolve, reject) => {\n            const timeout = options.timeout &&\n                setTimeout(() => {\n                    window.removeEventListener('message', handleEvent);\n                    reject(new ProviderRpcError('Request timed out', 408));\n                }, options.timeout);\n            const handleEvent = (event) => {\n                if (event.data && event.data.id === requestId) {\n                    console.debug(`resolve id: ${requestId}`, { event });\n                    resolve(event.data);\n                    window.removeEventListener('message', handleEvent);\n                    timeout && clearTimeout(timeout);\n                }\n            };\n            window.addEventListener('message', handleEvent);\n            iframe.contentWindow.postMessage(req, '*');\n        });\n    });\n}\nexports.request = request;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvcG9zdG1zZy1ycGMuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZUFBZSxHQUFHLGdCQUFnQjtBQUNsQyxnQkFBZ0IsbUJBQU8sQ0FBQywyREFBTztBQUMvQixhQUFhLG1CQUFPLENBQUMsa0VBQU07QUFDM0IsZ0JBQWdCLEtBQUs7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwyQkFBMkIsZ0JBQWdCLGNBQWM7QUFDekQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZEO0FBQzdEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlEQUFpRCxVQUFVLEtBQUssT0FBTztBQUN2RTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVCxLQUFLO0FBQ0w7QUFDQSxlQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZnJvbnRlbmQvLi4vLi4vbm9kZV9tb2R1bGVzL0BuZmlkL2VtYmVkL3NyYy9saWIvcG9zdG1zZy1ycGMuanM/MzlkYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVxdWVzdCA9IGV4cG9ydHMuUlBDX0JBU0UgPSB2b2lkIDA7XG5jb25zdCB0c2xpYl8xID0gcmVxdWlyZShcInRzbGliXCIpO1xuY29uc3QgdXVpZCA9IHJlcXVpcmUoXCJ1dWlkXCIpO1xuZXhwb3J0cy5SUENfQkFTRSA9IHsganNvbnJwYzogJzIuMCcgfTtcbmNsYXNzIFByb3ZpZGVyUnBjRXJyb3IgZXh0ZW5kcyBFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSwgZGF0YSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlKTtcbiAgICAgICAgdGhpcy5jb2RlID0gY29kZTtcbiAgICAgICAgdGhpcy5kYXRhID0gZGF0YTtcbiAgICB9XG59XG5mdW5jdGlvbiByZXF1ZXN0KGlmcmFtZSwgeyBtZXRob2QsIHBhcmFtcyB9LCBvcHRpb25zID0ge30pIHtcbiAgICByZXR1cm4gdHNsaWJfMS5fX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IHJlcXVlc3RJZCA9IHV1aWQudjQoKTtcbiAgICAgICAgY29uc3QgcmVxID0ge1xuICAgICAgICAgICAganNvbnJwYzogJzIuMCcsXG4gICAgICAgICAgICBpZDogcmVxdWVzdElkLFxuICAgICAgICAgICAgbWV0aG9kLFxuICAgICAgICAgICAgcGFyYW1zLFxuICAgICAgICAgICAgb3B0aW9ucyxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc29sZS5kZWJ1ZygncG9zdG1zZy1ycGMgcmVxdWVzdCcsIE9iamVjdC5hc3NpZ24oe30sIHJlcSkpO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgdGltZW91dCA9IG9wdGlvbnMudGltZW91dCAmJlxuICAgICAgICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGhhbmRsZUV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBQcm92aWRlclJwY0Vycm9yKCdSZXF1ZXN0IHRpbWVkIG91dCcsIDQwOCkpO1xuICAgICAgICAgICAgICAgIH0sIG9wdGlvbnMudGltZW91dCk7XG4gICAgICAgICAgICBjb25zdCBoYW5kbGVFdmVudCA9IChldmVudCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChldmVudC5kYXRhICYmIGV2ZW50LmRhdGEuaWQgPT09IHJlcXVlc3RJZCkge1xuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmRlYnVnKGByZXNvbHZlIGlkOiAke3JlcXVlc3RJZH1gLCB7IGV2ZW50IH0pO1xuICAgICAgICAgICAgICAgICAgICByZXNvbHZlKGV2ZW50LmRhdGEpO1xuICAgICAgICAgICAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignbWVzc2FnZScsIGhhbmRsZUV2ZW50KTtcbiAgICAgICAgICAgICAgICAgICAgdGltZW91dCAmJiBjbGVhclRpbWVvdXQodGltZW91dCk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdtZXNzYWdlJywgaGFuZGxlRXZlbnQpO1xuICAgICAgICAgICAgaWZyYW1lLmNvbnRlbnRXaW5kb3cucG9zdE1lc3NhZ2UocmVxLCAnKicpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydHMucmVxdWVzdCA9IHJlcXVlc3Q7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/../../node_modules/@nfid/embed/src/lib/postmsg-rpc.js\n");

/***/ })

};
;